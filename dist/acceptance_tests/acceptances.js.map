{"version":3,"sources":["../../acceptance_tests/acceptances.js"],"names":["assert","require","expect","eventor","addSubjectDictionary","addActionDictionary","testUserInputWithExpectedOutputs","testInput","action","subject","time","it","result","getEventFromInput","originalInput","to","eql","describe","forEach"],"mappings":";;AACA;;AAQA;;AATA,IAAIA,SAASC,QAAQ,QAAR,CAAb;;AAUA,IAAIC,SAASD,QAAQ,MAAR,EAAgBC,MAA7B;;AAEA,IAAMC,UAAU,wBAAhB;AACAA,QAAQC,oBAAR,CAA6B,IAA7B;AACAD,QAAQC,oBAAR,CAA6B,IAA7B;AACAD,QAAQE,mBAAR,CAA4B,IAA5B;AACAF,QAAQE,mBAAR,CAA4B,IAA5B;;AAEA,SAASC,gCAAT,CAA0CC,SAA1C,EAAqDC,MAArD,EAA6DC,OAA7D,EAAsEC,IAAtE,EAA4E;AACxEC,OAAG,qBAAqBJ,SAAxB,EAAmC,YAAY;AAC3C,YAAIK,SAAST,QAAQU,iBAAR,CAA0BN,SAA1B,CAAb;AACAL,eAAOU,OAAOE,aAAd,EAA6BC,EAA7B,CAAgCC,GAAhC,CAAoCT,SAApC;AACAL,eAAOU,OAAOF,IAAd,EAAoBK,EAApB,CAAuBC,GAAvB,CAA2BN,IAA3B;AACA;AACAR,eAAOU,OAAOH,OAAd,EAAuBM,EAAvB,CAA0BC,GAA1B,CAA8BP,OAA9B;AACH,KAND;AAOH;;AAEDQ,SAAS,kBAAT,EAA6B,YAAY;AACrC,+BAAgBC,OAAhB,CAAwB,UAACT,OAAD,EAAa;AACjC,mCAAgBS,OAAhB,CAAwB,UAACV,MAAD,EAAY;AAChC,qCAAcU,OAAd,CAAsB,UAACR,IAAD,EAAU;AAC5B,oBAAIH,YAAYC,SAAS,GAAT,GAAeC,OAAf,GAAyB,GAAzB,GAA+BC,IAA/C;AACAJ,iDAAiCC,SAAjC,EAA4CC,MAA5C,EAAoDC,OAApD,EAA6DC,IAA7D;AACH,aAHD;AAIH,SALD;AAMH,KAPD;;AASA,8BAAeQ,OAAf,CAAuB,UAACT,OAAD,EAAa;AAChC,kCAAeS,OAAf,CAAuB,UAACV,MAAD,EAAY;AAC/B,oCAAaU,OAAb,CAAqB,UAACR,IAAD,EAAU;AAC3B,oBAAIH,YAAYC,SAAS,GAAT,GAAeC,OAAf,GAAyB,GAAzB,GAA+BC,IAA/C;AACAJ,iDAAiCC,SAAjC,EAA4CC,MAA5C,EAAoDC,OAApD,EAA6DC,IAA7D;AACH,aAHD;AAIH,SALD;AAMH,KAPD;AAQH,CAlBD","file":"acceptances.js","sourcesContent":["var assert = require('assert');\nimport {\n    english_times,\n    english_subject,\n    english_actions,\n    french_times,\n    french_actions,\n    french_subject\n} from \"./test-const\";\nimport {WitsEventor} from \"../src/index\";\nlet expect = require('chai').expect;\n\nconst eventor = new WitsEventor();\neventor.addSubjectDictionary('en', english_subject);\neventor.addSubjectDictionary('fr', french_subject);\neventor.addActionDictionary('en', english_actions);\neventor.addActionDictionary('fr', french_actions);\n\nfunction testUserInputWithExpectedOutputs(testInput, action, subject, time) {\n    it(\"generated test: \" + testInput, function () {\n        var result = eventor.getEventFromInput(testInput);\n        expect(result.originalInput).to.eql(testInput);\n        expect(result.time).to.eql(time);\n        //expect(result.action).to.eql(action);\n        expect(result.subject).to.eql(subject);\n    });\n}\n\ndescribe('Acceptance tests', function () {\n    english_subject.forEach((subject) => {\n        english_actions.forEach((action) => {\n            english_times.forEach((time) => {\n                var testInput = action + \" \" + subject + \" \" + time;\n                testUserInputWithExpectedOutputs(testInput, action, subject, time);\n            })\n        });\n    });\n\n    french_subject.forEach((subject) => {\n        french_actions.forEach((action) => {\n            french_times.forEach((time) => {\n                var testInput = action + \" \" + subject + \" \" + time;\n                testUserInputWithExpectedOutputs(testInput, action, subject, time);\n            })\n        });\n    });\n});"]}