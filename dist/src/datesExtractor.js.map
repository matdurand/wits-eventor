{"version":3,"sources":["../../src/datesExtractor.js"],"names":["extractDatesFromText","chrono","require","text","results","parse","extractedDates","originalText","textWithoutDatesKeywords","usedLanguage","getTextLanguageFromResult","forEach","result","push","extractDateFromResult","extractDatesKeyWordFromText","test","console","log","name","tags","languageCode","substring","toLowerCase","extractedDate","value","ref","startedIndexInText","index","replace"],"mappings":";;;;;QAuBgBA,oB,GAAAA,oB;AAvBhB;AACA;;;;;;;;;;;;;;;;;;AAkBA,IAAIC,SAASC,QAAQ,aAAR,CAAb;AACA,IAAIC,OAAO,wDAAX;AACAH,qBAAqBG,IAArB;;AAEO,SAASH,oBAAT,CAA8BG,IAA9B,EAAoC;AACvC,QAAIC,UAAUH,OAAOI,KAAP,CAAaF,IAAb,CAAd;AACA,QAAIG,iBAAiB,EAArB;AACA,QAAIC,eAAeJ,IAAnB;AACA,QAAIK,2BAA2BL,IAA/B;AACA,QAAIM,eAAeC,0BAA0BN,QAAQ,CAAR,CAA1B,CAAnB;;AAEAA,YAAQO,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxBN,uBAAeO,IAAf,CAAoBC,sBAAsBF,MAAtB,CAApB;AACAJ,mCAA2BO,4BAA4BP,wBAA5B,EAAsDI,MAAtD,CAA3B;AACH,KAHD;;AAKA,QAAII,OAAO;AACPT,kCADO;AAEPC,0DAFO;AAGPF,sCAHO;AAIPG;AAJO,KAAX;AAMAQ,YAAQC,GAAR,CAAYF,IAAZ;AACA,WAAOA,IAAP;AAEH;;AAGD,SAASN,yBAAT,CAAmCE,MAAnC,EAA2C;AACvC,SAAK,IAAIO,IAAT,IAAiBP,OAAOQ,IAAxB,EAA8B;AAC1B,YAAIC,eAAeF,KAAKG,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAnB;AACA,eAAOD,aAAaE,WAAb,EAAP;AACH;AACJ;;AAED,SAAST,qBAAT,CAA+BF,MAA/B,EAAuC;AACnC,QAAIY,gBAAgB,EAApB;AACAA,kBAAcC,KAAd,GAAsBb,OAAOc,GAA7B;AACAF,kBAAcG,kBAAd,GAAmCf,OAAOgB,KAA1C;AACA,WAAOJ,aAAP;AACH;;AAED,SAAST,2BAAT,CAAqCP,wBAArC,EAA+DI,MAA/D,EAAuE;AACnE,WAAOJ,yBAAyBqB,OAAzB,CAAiCjB,OAAOT,IAAxC,EAA8C,EAA9C,CAAP;AACH","file":"datesExtractor.js","sourcesContent":["//Outputs\n/*\n * {\n *   originalText,\n *   textWithoutDatesKeyword,\n *   extractedDate : [\n *       {\n *           startedIndexInText : (position dans l'orginialText),\n *           value : La date javascript\n *       },\n *       {\n *\n *       }\n *   ],\n *   usedLanguage (ex : 'fr', 'en')\n * }\n *\n * */\n\nlet chrono = require('chrono-node');\nlet text = \"Tomorrow's practice cancelled, moved to next wednesday\";\nextractDatesFromText(text);\n\nexport function extractDatesFromText(text) {\n    let results = chrono.parse(text);\n    let extractedDates = [];\n    let originalText = text;\n    let textWithoutDatesKeywords = text;\n    let usedLanguage = getTextLanguageFromResult(results[0]);\n\n    results.forEach((result) => {\n        extractedDates.push(extractDateFromResult(result));\n        textWithoutDatesKeywords = extractDatesKeyWordFromText(textWithoutDatesKeywords, result);\n    });\n\n    let test = {\n        originalText,\n        textWithoutDatesKeywords,\n        extractedDates,\n        usedLanguage\n    };\n    console.log(test);\n    return test;\n\n}\n\n\nfunction getTextLanguageFromResult(result) {\n    for (let name in result.tags) {\n        let languageCode = name.substring(0, 2);\n        return languageCode.toLowerCase();\n    }\n}\n\nfunction extractDateFromResult(result) {\n    let extractedDate = {};\n    extractedDate.value = result.ref;\n    extractedDate.startedIndexInText = result.index;\n    return extractedDate;\n}\n\nfunction extractDatesKeyWordFromText(textWithoutDatesKeywords, result) {\n    return textWithoutDatesKeywords.replace(result.text, '');\n}"]}