{"version":3,"sources":["../../src/stemmer.js"],"names":["Stemmer","stemmers","require","FrenchStemmer","EnglishStemmer","language","keywords","stemmerFactory","Error","Array","isArray","map","keyword","stem","stemmer","stemmedWord","stemWord","toLowerCase","originalKeyword","stemmedKeyword"],"mappings":";;;;;;;;;;IAAaA,O,WAAAA,O;AACT,uBAAc;AAAA;;AACV,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKA,QAAL,CAAc,IAAd,IAAsBC,QAAQ,oDAAR,EAA8DC,aAApF;AACA,aAAKF,QAAL,CAAc,IAAd,IAAsBC,QAAQ,qDAAR,EAA+DE,cAArF;AACH;;;;qCAEYC,Q,EAAUC,Q,EAAU;;AAE7B,gBAAMC,iBAAiB,KAAKN,QAAL,CAAcI,QAAd,CAAvB;AACA,gBAAI,CAACE,cAAL,EACI,MAAM,IAAIC,KAAJ,2BAAkCH,QAAlC,CAAN;;AAEJ,gBAAIC,QAAJ,EAAc;AACV,oBAAIG,MAAMC,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AACzB,2BAAOA,SAASK,GAAT,CAAa,UAACC,OAAD,EAAa;AAC7B,+BAAOC,KAAKN,cAAL,EAAqBK,OAArB,CAAP;AACH,qBAFM,CAAP;AAGH,iBAJD,MAIO,IAAI,OAAON,QAAP,KAAoB,QAAxB,EAAkC;AACrC,2BAAOO,KAAKN,cAAL,EAAqBD,QAArB,CAAP;AACH,iBAFM,MAEA;AACH,0BAAM,IAAIE,KAAJ,CAAU,+BAAV,CAAN;AACH;AACJ;AACJ;;;;;;AAIL,SAASK,IAAT,CAAcN,cAAd,EAA8BK,OAA9B,EAAuC;AACnC,QAAME,UAAU,IAAIP,cAAJ,EAAhB;AACA,QAAMQ,cAAcD,QAAQE,QAAR,CAAiBJ,QAAQK,WAAR,EAAjB,CAApB;AACA,WAAO,EAACC,iBAAiBN,OAAlB,EAA2BO,gBAAgBJ,WAA3C,EAAP;AACH","file":"stemmer.js","sourcesContent":["export class Stemmer {\n    constructor() {\n        this.stemmers = {};\n        this.stemmers['fr'] = require('snowball-stemmer.jsx/dest/french-stemmer.common.js').FrenchStemmer;\n        this.stemmers['en'] = require('snowball-stemmer.jsx/dest/english-stemmer.common.js').EnglishStemmer;\n    }\n\n    stemKeywords(language, keywords) {\n\n        const stemmerFactory = this.stemmers[language];\n        if (!stemmerFactory)\n            throw new Error(`Unsupported language ${language}`);\n\n        if (keywords) {\n            if (Array.isArray(keywords)) {\n                return keywords.map((keyword) => {\n                    return stem(stemmerFactory, keyword);\n                });\n            } else if (typeof keywords === 'string') {\n                return stem(stemmerFactory, keywords);\n            } else {\n                throw new Error('Unsupported keywords argument');\n            }\n        }\n    }\n\n}\n\nfunction stem(stemmerFactory, keyword) {\n    const stemmer = new stemmerFactory();\n    const stemmedWord = stemmer.stemWord(keyword.toLowerCase());\n    return {originalKeyword: keyword, stemmedKeyword: stemmedWord};\n}"]}