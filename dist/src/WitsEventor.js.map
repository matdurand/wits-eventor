{"version":3,"sources":["../../src/WitsEventor.js"],"names":["WitsEventor","subjectDictionaries","actionDictionaries","dateExtractor","language","subjects","buildDictionary","actions","userInput","dateExtractionResult","extractDatesFromText","keywords","usedLanguage","textWithoutDatesKeywords","stemmingResult","stemKeywords","stemmedKeywords","pluck","subject","findSubject","call","action","findAction","originalInput","time","extractedDates","dateTextExtracted","dict","findFirstDictionary","dictionary","undefined","foundKeyword","find","stemmedKeyword","words","Error","Array","isArray","forEach","word"],"mappings":"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","file":"WitsEventor.js","sourcesContent":["import {generateKeywords} from \"./keyword-extractor\";\nimport {DateExtractor} from \"./datesExtractor\";\nimport {Stemmer} from \"./stemmer\";\nimport {_} from \"underscore\";\n\nexport class WitsEventor {\n    constructor() {\n        this.subjectDictionaries = {};\n        this.actionDictionaries = {};\n        this.dateExtractor = new DateExtractor();\n    }\n\n    addSubjectDictionary(language, subjects) {\n        this.subjectDictionaries[language] = buildDictionary(language, subjects);\n    }\n\n    addActionDictionary(language, actions) {\n        this.actionDictionaries[language] = buildDictionary(language, actions);\n    }\n\n    getEventFromInput(userInput) {\n        const dateExtractionResult = this.dateExtractor.extractDatesFromText(userInput);\n        if (dateExtractionResult) {\n            const keywords = generateKeywords(dateExtractionResult.usedLanguage, dateExtractionResult.textWithoutDatesKeywords);\n            const stemmingResult = new Stemmer().stemKeywords(dateExtractionResult.usedLanguage, keywords);\n            const stemmedKeywords = _.pluck(stemmingResult, 'stemmedKeyword');\n            const subject = findSubject.call(this, dateExtractionResult.usedLanguage, stemmedKeywords);\n            if (subject) {\n                const action = findAction.call(this, dateExtractionResult.usedLanguage, stemmedKeywords);\n                return {\n                    originalInput: userInput,\n                    time: dateExtractionResult.extractedDates[0].dateTextExtracted,\n                    action,\n                    subject\n                }\n            } else {\n                return {\n                    \"originalInput\": userInput,\n                    \"error\": \"No subject found\"\n                };\n            }\n        } else {\n            return {\n                \"originalInput\": userInput,\n                \"error\": \"No dates found\"\n            };\n        }\n    }\n}\n\nfunction findSubject(language, stemmedKeywords) {\n    const dict = this.subjectDictionaries[language];\n    return findFirstDictionary(dict, stemmedKeywords);\n}\n\nfunction findAction(language, stemmedKeywords) {\n    const dict = this.actionDictionaries[language];\n    return findFirstDictionary(dict, stemmedKeywords);\n}\n\nfunction findFirstDictionary(dictionary, stemmedKeywords) {\n    if (!dictionary)\n        return undefined;\n    const foundKeyword = _.find(stemmedKeywords, (stemmedKeyword) => dictionary[stemmedKeyword]);\n    if (foundKeyword) {\n        return dictionary[foundKeyword];\n    }\n}\n\nfunction buildDictionary(language, words) {\n    if (typeof language !== 'string') {\n        throw new Error('expecting a string language');\n    }\n    if (!Array.isArray(words)) {\n        throw new Error('dictionary content should be an array of words');\n    }\n\n    const dict = {};\n    words.forEach((word) => {\n        const stemmingResult = new Stemmer().stemKeywords(language, word);\n        dict[stemmingResult.stemmedKeyword] = word;\n    });\n\n    return dict;\n}\n"]}